Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision e3c03932f63362e4e47fd408bed0786c7ea47beb)
+++ .idea/vcs.xml	(revision )
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision e3c03932f63362e4e47fd408bed0786c7ea47beb)
+++ .idea/misc.xml	(revision )
@@ -44,7 +44,7 @@
     <ConfirmationsSetting value="0" id="Add" />
     <ConfirmationsSetting value="0" id="Remove" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
\ No newline at end of file
Index: app/src/main/java/com/example/gy185013/mongodb4/MongoPortal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/gy185013/mongodb4/MongoPortal.java	(revision e3c03932f63362e4e47fd408bed0786c7ea47beb)
+++ app/src/main/java/com/example/gy185013/mongodb4/MongoPortal.java	(revision )
@@ -35,8 +35,7 @@
 
     public void PopulateTreatmentTable(TreatmentObject treatmentobj) {
 
-     //   String dbURI = "mongodb://diabetes:dexcom123@ds035997.mongolab.com:35997/nightscout";
-        String dbURI = "mongodb://diabetes:dexcom123@ds040898.mongolab.com:40898/redbox";
+        String dbURI = "mongodb://<username:<password><server>:<port>/<databasename>";
         String databasename = GetDatabaseName(dbURI);
 
         MongoClient mongoClient = null;
@@ -46,14 +45,12 @@
             mongoClient = new MongoClient(uri);
 
             DB db = mongoClient.getDB(databasename);
-            //  DBCollection school = db.createCollection("test", new BasicDBObject() );
 
             DBCollection treatments = db.getCollection("treatments");
             treatments.insert(treatmentobj.GetMongoDBOject());
             if(mongoClient != null)
             {
-               // Toast.makeText(getApplicationContext(), "Date or Time have not been set", Toast.LENGTH_LONG).show();
-                mongoClient.close();
+                 mongoClient.close();
             }
         }
         catch (Exception e) {
@@ -78,106 +75,6 @@
         return result;
     }
 
-
-    public boolean ReadColections() {
-        String dbURI = "mongodb://diabetes:dexcom123@ds035997.mongolab.com:35997/nightscout";
-        Integer portnumber = 35997;
-        String username = "diabetes";
-        String databasename = "nightscout";
-        String password = "dexcom123";
-        MongoClient mongoClient = null;
-        String hostname = "ds035997.mongolab.com";
-// mongo ds035997.mongolab.com:35997/nightscout -u <dbuser> -p <dbpassword>
-            try {
-/*
-                MongoCredential credential = MongoCredential.createMongoCRCredential(username,
-                    databasename,
-                    password.toCharArray());
-            List<MongoCredential> credentials = new ArrayList<MongoCredential>();
-            credentials.add(credential);
-
-
-            MongoClientOptions.Builder b = MongoClientOptions.builder();
-            b.alwaysUseMBeans(false);
-            b.connectTimeout(60000);
-            b.heartbeatSocketTimeout(60000);
-            b.maxWaitTime(60000);
-
-            ServerAddress sa = new ServerAddress(hostname, portnumber);
-            mongoClient = new MongoClient(sa, credentials, b.build());*/
-/*
-             mongoClient = new MongoClient("10.0.2.2");
-*/
-          //  String textUri = "mongodb://admin:password@ds041177.mongolab.com:41177/myclouddb";
- /*           MongoClientURI uri = new MongoClientURI(dbURI);
-            mongoClient = new MongoClient(uri);
-
-                DB db = mongoClient.getDB(databasename);
-              //  DBCollection school = db.createCollection("test", new BasicDBObject() );
-
-                DBCollection school = db.getCollection("test");
-                 school.insert(GetBasicObject());*/
-
-/*
-            List<String> databases = mongoClient.getDatabaseNames();
-
-            for (String dbName : databases) {
-                myresult+= "- Database: " + dbName + "\n";
-
-                DB db = mongoClient.getDB(dbName);
-
-                Set<String> collections = db.getCollectionNames();
-                for (String colName : collections) {
-                    myresult+="\t + Collection: " + colName+ "\n";
-                }
-            }
-*/
-            mongoClient.close();
-
-        } catch (Exception e) {
-            if(mongoClient != null)
-            {
-                mongoClient.close();
-            }
-
-            e.printStackTrace();
-            return false;
-        }
-        return true;
-    }
-
-
- /*   private BasicDBObject  GetBasicObject(){
-
-
-        TreatmentObject obj = new TreatmentObject();
-        obj.SetEnteredBy("Dad");
-        obj.SetEventType("More Stuff");
-     //   obj.SetNotes("This is a test of populating the database");
-        obj.SetInsulin("Lots");
-
-        DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.ms'Z'");
-        String created_at = dateformat.format(new Date());
-        obj.SetCreateAt(created_at);
-        //"created_at": "2015-08-19T15:28:00.450Z"
-        return obj.GetMongoDBOject();
-
-    }
-*/
-//    private BasicTreatmentObject(String EnteredBy, String EventType, String insulin, )
-/*
-{
-    "_id": {
-        "$oid": "55d4a080a56625c820958187"
-    },
-    "enteredBy": "mum",
-    "eventType": "BG Check",
-    "insulin": "1.5",
-    "notes": "Iob when called",
-    "created_at": "2015-08-19T15:28:00.450Z"
-}   "created_at": "2015-08-22T20:28:56 .2856Z"
-  "created_at": "2015-08-22T20:27:45Z"
- */
     @Override
     protected void onPostExecute(String result) {
         //do stuff
